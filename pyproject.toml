[tool.poetry]
name = "heartkit"
version = "1.2.0"
description = "AI driven heart monitoring kit for ultra low-power wearables."
license = "BSD-3-Clause"
authors = ["Ambiq AI <support.aitg@ambiq.com>"]
readme = "README.md"
homepage = "https://ambiq.ai"
packages = [
    { include = "heartkit" }
]

include = [
    { path = "tests", format = "sdist" }
]

[tool.poetry.scripts]
heartkit = 'heartkit.cli:run'

[tool.taskipy.tasks]
format = "isort --profile black heartkit && black --line-length 120 heartkit"
lint = "pylint heartkit"
test = "pytest tests/"
clean = "make -C ./evb clean"
build = "make -C ./evb"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q"
testpaths = [
    "tests",
]
filterwarnings = [
    "ignore:Call to deprecated create:DeprecationWarning",
    "ignore:distutils Version:DeprecationWarning",
    "ignore:The register_cmap function:PendingDeprecationWarning"
]

[tool.poetry.dependencies]
python = ">=3.11,<3.12"
tensorflow-macos = {version = "^2.14.0", platform = "darwin"}
tensorflow = {version = "^2.14.0", markers = "sys_platform != 'darwin'"}
numpy = "^1.24.3"
scikit-learn = "^1.3.0"
wfdb = "^4.1.2"
tensorflow-metal = {version = "^1.1.0", platform = "darwin"}
fastparquet = "^2023.7.0"
plotly = "^5.15.0"
tqdm = "^4.65.0"
seaborn = "^0.12.2"
matplotlib = "3.7.3"
neurokit2 = "^0.2.4"
tensorflow-model-optimization = "^0.7.3"
pydantic = "^1.10.2"
pydantic-argparse = "^0.5.0"
typer = {version = "^0.9.0", extras = ["all"]}
erpc = {git = "https://github.com/AmbiqAI/erpc.git", rev = "develop", subdirectory = "erpc_python"}
pyserial = "^3.5"
rich = "^13.4.2"
wandb = "^0.15.8"
scipy = "^1.11.1"
plotext = "^5.2.8"
boto3 = "^1.27.1"
orjson = "^3.9.1"
physiokit = "^0.7.0"

[tool.poetry.group.dev.dependencies]
black = "23.3.0"
ipython = "^8.4.0"
pylint = "^2.15.2"
pytest = "^7.1.3"
taskipy = "^1.10.3"
pre-commit = "^2.20.0"
jupyter = "^1.0.0"
notebook = "^6.5.2"
tensorboard-plugin-profile = "^2.13.0"

[tool.poetry.group.gui.dependencies]
fastapi = "^0.95.0"
uvicorn = "^0.21.1"
requests = "^2.28.2"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.5.3"
mkdocs-material = "^9.4.6"
mkdocstrings-python = "^1.7.3"
markdown-include = "^0.8.1"
mkdocs-exclude = "^1.0.2"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = 'black'

[tool.black]
line-length = 120

[tool.pylint.master]
ignore-paths = [
    "heartkit/rpc/GenericDataOperations_EvbToPc",
    "heartkit/rpc/GenericDataOperations_PcToEvb"
]
extension-pkg-whitelist = "pydantic"

[tool.pylint.message_control]
disable = [
    "unused-argument",
    "missing-module-docstring",
    "too-few-public-methods",
    "invalid-name",
    "logging-fstring-interpolation",
    "duplicate-code",
    "use-dict-literal",
    "unnecessary-lambda-assignment",
    "cell-var-from-loop"
]

[tool.pylint.format]
max-line-length = 140

[tool.pylint.design]
max-args = 50
max-locals = 50
max-statements = 80
max-module-lines = 2000
max-attributes = 10
max-branches = 50
max-returns = 10

[tool.pyright]

reportShadowedImports = "none"
